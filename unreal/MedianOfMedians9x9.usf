// This version of median-of-medians is the biggest that can run real-time for VR

#define WINDOWSIZE 9
#define NUM_ELEMS WINDOWSIZE * WINDOWSIZE
#define NUM_BINS NUM_ELEMS / 5

float3 luminance_vals = float3(0.2126, 0.7152, 0.0722);
float2 pixel_size = 1.0 / viewsize;
float3 values[NUM_ELEMS];
float3 medians[NUM_BINS];


int filter_extent = WINDOWSIZE / 2;
int index = 0;

for(int x = -filter_extent; x <= filter_extent; x++)
{
	for(int y = -filter_extent; y <= filter_extent; y++)
	{
		float2 offset = float2(float(x), float(y)) * pixel_size;
		values[index] = SceneTextureLookup(ViewportUVToSceneTextureUV(uv + offset, 14), 14, true).rgb;
		//values[index] = texture(iChannel1, uv + offset).rgb;
		index++;
	}
}

for(int i = 0; i < NUM_BINS; i++)
{
	float3 intermediary_values[5];
	for(int j = 0; j < 5; j++)
	{
		intermediary_values[j] = values[i * 5 + j];
	}
	
	for(int j = 1; j < 5; j++)
	{
		float3 key = intermediary_values[j];
		int k = j - 1;
		while(k >= 0 && dot(intermediary_values[k], luminance_vals) > dot(key, luminance_vals))
		{
			intermediary_values[k + 1] = intermediary_values[k];
			k = k - 1;
		}
		
		intermediary_values[k + 1] = key;
	}
	medians[i] = intermediary_values[2];
}

for(int i = 1; i < NUM_BINS; i++)
{
	float3 key = medians[i];
	int j = i - 1;
	while(j >= 0 && dot(medians[j], luminance_vals) > dot(key, luminance_vals))
	{
		medians[j + 1] = medians[j];
		j = j - 1;
	}
	
	medians[j + 1] = key;
}

return float4(medians[4], 1.0);